
- hosts: bastion
  become: yes
  tasks:
  - name: ssh-key
    command: sshpass -p toor ssh-copy-id -i /root/.ssh/id_rsa.pub -o StrictHostKeyChecking=no root@192.168.122.242
    
 
 
- hosts: baswor
  become: yes
  tasks:
  - name: yum bind
    yum:
      name: bind
      state: present
      
  - name: yum bind
    yum:
      name: bind-chroot
      state: present
   
  - name: yum bind
    yum:
      name: bind-utils
      state: present
      
  - name: add hosts
    blockinfile:
      path: /etc/hosts
      block: |
        192.168.122.196 ns.okd.com
        192.168.122.242 master.okd.com
      
      
  - name: dhcp
    replace:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      regexp: 'BOOTPROTO="dhcp"'
      replace: 'BOOTPROTO=static'
      
  - name: replace.resolv.conf
    replace:
      path: /etc/resolv.conf
      regexp: 'nameserver 192.168.122.1'
      replace: 'nameserver 192.168.122.196'
      

      


- hosts: bastion
  become: yes
  tasks:
  - name: dns static
    blockinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      block: |
        IPADDR="192.168.122.196"
        NETMASK="255.255.255.0"
        GATEWAY="192.168.122.1"
        PREFIX="24"
        DNS1=192.168.122.196
        
          
- hosts: worker
  become: yes
  tasks:
  - name: dns static
    blockinfile:
      path: /etc/sysconfig/network-scripts/ifcfg-eth0
      block: |
        IPADDR="192.168.122.242"
        NETMASK="255.255.255.0"
        GATEWAY="192.168.122.1"
        PREFIX="24"
        NM_CONTROLLED=yes 
        PEERDNS=yes
        DNS1=192.168.122.196
      
  - name: add net.ipv4
    lineinfile:
      path: /etc/sysctl.conf
      line: 'net.ipv4.ip_forward=1'
      
      
  - name: network restart
    service:
      name: network
      state: restarted
      

- hosts: bastion
  become: yes
  tasks:
  - name: replace named.conf
    replace:
      path: /etc/named.conf
      regexp: 'listen-on port 53 { 127.0.0.1; };'
      replace: 'listen-on port 53 { any; };'
      
  - name: named.conf
    replace:
      path: /etc/named.conf
      regexp: 'listen-on-v6 port 53 { ::1; };'
      replace: 'listen-on-v6 port 53 { any; };'
      
  - name: named.conf
    replace:
      path: /etc/named.conf
      regexp: 'allow-query     { localhost; };'
      replace: 'allow-query { any; };'
       
  - name: add zonefile
    lineinfile:
      path: /etc/named.rfc1912.zones
      line: "{{ item }}"
    with_items:
      - "zone \"okd.com\" IN {" 
      - " type master;"  
      - " file \"okd.com.zone\";" 
      - " allow-update { none; };"
      - "}; "
      
  - name: create file
    file:
      path: /var/named/okd.com.zone
      state: touch
        
  - name: add zone 
    lineinfile:
      path: /var/named/okd.com.zone
      line: "{{ item }}"
    with_items:
      - "$TTL 3H"
      - "@ IN SOA ns.okd.com. root.okd.com. ("
      - " 0 ; serial"
      - " 1D ; refresh"
      - " 1H ; retry"
      - " 1W ; expire"
      - " 3H ) ; minimum"
      - " IN NS ns.okd.com."
      - "ns IN A 192.168.122.196"
      - "okd IN A 192.168.122.242"
        
  - name: start named
    service:
      name: named
      state: started
      enabled: yes

      
  - name: firewall tcp
    firewalld:
      port: 53/tcp
      permanent: true
      state: enabled
    
  - name: firesall udp
    firewalld:
      port: 53/udp
      permanent: true
      state: enabled
      
  - name: service start net man
    service:
      name: NetworkManager
      state: restarted 
      

#  - name: ifcfg p
#    lineinfile:
#      path: /etc/resolv.conf
#      line: 'nameserver 192.168.122.40'

      

  - name: install openshift
    yum:
      name: centos-release-openshift-origin311.noarch
      state: installed
      
  - name: install ansible
    yum:
      name: openshift-ansible 
      state: present
      
  - name: install ansible
    yum:
      name: ansible 
      state: present
 
  - name: install python-pip
    yum:
      name: python-pip
      state: present
      
  - name: install 
    pip:
      name: ansible==2.6.20
      
   
  - name: create file
    file:
      path: /usr/share/ansible/openshift-ansible/inventory/hosts.localhost
      state: touch
  
  - name: add inventory
    blockinfile:
      path: /usr/share/ansible/openshift-ansible/inventory/hosts.localhost
      block: |
        [OSEv3:children]
        masters
        nodes
        etcd
        
        [OSEv3:vars]
        os_firewall_use_firewalld=true
        openshift_pkg_version=-3.11.*
        openshift_deployment_type=origin
        openshift_portal_net=172.30.0.0/16
        openshift_disable_check=disk_availability,memory_availability,docker_image_availability
        
        openshift_node_groups=[{'name': 'node-config-all-in-one', 'labels': ['node-role.kubernetes.io/master=true', 'node-role.kubernetes.io/infra=true','node-role.kubernetes.io/compute=true']}]
        
        openshift_master_default_subdomain=master.okd.com
        openshift_master_identity_providers=[{'name': 'htpasswd_auth', 'login':'true', 'challenge': 'true', 'kind': 'HTPasswdPasswordIdentityProvider'}]

        debug_level=6
        
        ansible_ssh_user=root
        
        ansible_become=true

        openshift_cockpit_deployer_image='docker.io/timbordemann/cockpit-kubernetes:latest'

        [masters]
        master.okd.com openshift_schedulable=true
        [etcd]
        master.okd.com
        [nodes]
        master.okd.com openshift_node_group_name='node-config-all-in-one'
        
  - name: ansible-playbook deploy1
    command: ansible-playbook -i /usr/share/ansible/openshift-ansible/inventory/hosts.localhost /usr/share/ansible/openshift-ansible/playbooks/prerequisites.yml
        
        
  - name: ansible-playbook deploy2
    command: ansible-playbook -i /usr/share/ansible/openshift-ansible/inventory/hosts.localhost /usr/share/ansible/openshift-ansible/playbooks/deploy_cluster.yml
        
 
    
    
  
